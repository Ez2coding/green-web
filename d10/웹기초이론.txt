*웹사이트 제작이 이루어지는 단계
1. 기획
2. 그래픽디자인
3. html&css
4. JQuery
5. 서버프로그래밍
6. 웹런칭
-----------------------------------------
*html이란?
- 웹브라우저가 알아들을 수 있는 문서의 형식.
- html문서는 태그로 이루어져 있음.
- 태그(tag) : html문서를 구성하는 명령어들.
<태그명></태그명>
-----------------------------------------
*html문서의 기본형식
<html>
    <head>
        <title>문서제목</title>
    </head>
    <body>웹사이트 본문내용</body>
</html>
-----------------------------------------
* 주석문
문서에 작성은 하지만, 브라우저상에 출력되어 지지 않는 영역.
문서의 종류에 따라 주석의 종류도 달라짐.
주석안에 또다른 주석이 포함되어지면 안됨.

주석의 형태 2가지
<!-- html주석 -->
/* css주석 */
---------------------------------------------------
* 기본태그
<div></div>      : 공간을 나누는 역할.
<p></p>          : 문단(공간보다 작은영역) 나누는 역할.
<span></span> : 특정 텍스트만을 꾸며주는 역할.
                        (공간에 영향을 미치지 않음)
<strong></strong> : 특정 텍스트를 강조, 진하게 처리해주는 역할.
<h1></h1>~<h6></h6> : 제목태그 (순서대로 작성. 글자크기크게,진하게)
----------------------------------------------------
* css 스타일
: 태그의 모양을 변경하기 위해서 사용하게됨. 
style속성에는 여러가지 스타일이 지정될 수 있음.
(ex. 너비, 높이, 글자색상, 배경색상, 여백 등...)

<태그명 style="스타일속성종류:값"></태그명>

하나의 태그에 여러가지 스타일이 입력될 경우,
<태그명 style="스타일속성종류:값; 스타일속성종류:값;"></태그명>

*기본 스타일 속성
색상값 : 키워드 또는 16진수 #헥스코드 주로사용.
     ex) blue, red...    / #00f or #0000ff (3자리 혹은 6자리)
사이즈단위: px (기본값)
----------------------------------------------------
== 폰트 스타일 ==
color 속성           : 글자 색상을 변경하는 속성.
font-size 속성      : 글자 크기를 변경하는 속성.
font-weight 속성  : 글자 두께를 변경하는 속성.
  font-weight:normal    (기본값 =400)
  font-weight:bold       (두껍게 =700)
text-align 속성     : 문단의 좌우정렬을 변경하는 속성.
  text-align:center
  text-align:left
  text-align:right
----------------------------------------------------
<a></a> : 링크의 역할함.
               <a>태그에 담겨진 텍스트 또는 이미지를 클릭하면, 
              원하는 위치로 이동시켜 주는 역할을 함.
* href 속성 : 필수속성. 이동할 위치값을 작성함.
               <a href="이동경로"></a>
경로의 형태 2가지
1) 절대경로 : http://~
2) 상대경로 : 폴더명/파일명.html
     ㄴ상위폴더 : ../
     ㄴ같은폴더 : 파일명.html
* target 속성 : 링크에 담긴 문서를 열 장소를 지정함.
               <a href="이동경로" target="_blank"></a>  <=새탭에서열기
               <a href="이동경로" target="_self"></a>     <=기본값
--------------------------------------------------------------------------------
<img> : 이미지의 경로를 연결시키는 태그.
* src 속성 : 필수속성. 이미지 경로 지정함.
               <img src="폴더명/파일명.확장자">
=> 이미지확장자 : jpg / gif(움직이는이미지,투명이미지) / png(투명이미지) 
* alt 속성 : 대체텍스트. 웹접근성 때문에 사용해줘야함.
               이미지에대한 설명글. (이미지가 오류났을때 글자가 화면출력됨)
---------------------------------------------------------------------------------
목록태그 3가지
<ol>
   <li>목록내용</li>
</ol>
: <ol>태그 순서의 의미를 가지는 목록을 묶어놓은 태그.
  실제 목록의 내용은 <li>작성하여 표기함.
<ul>
   <li>목록내용</li>
</ul>
: <ul>태그 순서에 상관없는 목록을 묶어놓은 태그.
  실제 목록의 내용은 <li>작성하여 표기함.
<dl>
   <dt>대표단어</dt>
   <dd>대표단어를 설명하는 내용</dd>
</dl>
: <dl>태그는 정의형목록태그 라고 부름.
  <dt> 대표성을 가진 내용 / <dd> 종속되는 내용 작성.
=> <dt><dd> 교차로 작성가능. <dt>1개에 <dd>여러개 작성가능.
--------------------------------------------------------------------
== 공간의 값을 표현하는 스타일 ==
width  : 태그의 가로너비값 지정하는 속성
height : 태그의 세로높이값 지정하는 속성

== 테두리를 표현하는 스타일 ==
border  : 태그의 테두리를 추가하는 속성
{border:선두께 선모양 선색상;}

선모양 3가지 기본 (solid기본 / dotted점선 / dashed실선)

기본적으로 태그의 사방으로 적용되기때문에
한방향에 대한 테두리만 사용하고 싶다면~
border-top
border-right
border-bottom
border-left
------------------------------------------------------------------------
<table>태그 : 표 제작할때 사용 (예전에는 웹사이트 구조 제작시 사용했음)
<tr></tr> 태그   : 표행 table row  / 블록요소 (td, th요소만 포함가능)
<td></td> 태그 : 표열 table column / 인라인요소 (블록,인라인,글자 포함가능)

<table>
     <tr>
         <td>첫째줄 1칸</td>
         <td>첫째줄 2칸</td>
     </tr>
     <tr>
        <td>두번째줄 1칸</td>
        <td>두번째줄 2칸</td>
     </tr>
</table>
------------------------------------------
* 웹표준을 위한 테이블 태그
<caption></caption>  : 표의제목 (table요소 위, 중앙정렬)
<th></th> : table header 표 줄제목 (중앙정렬, 글자두껍게)

<thead></thead> : 표 상단 제목영역 표시
<tfoot></tfoot>   : 표 하단 영역 표시
<tbody></tbody> : 표 중앙 실제본문내용 표시
=> <tfoot>는 <thead>요소 뒤에 기술되지만, 표 가장 하단에 출력됨.
     (인쇄 및 기능등의 이유로 상/하단을 먼저 코드상 정확히 지정해줌)

* table자체 속성
colspan 속성 : 가로 합치기
rowspan 속성 : 세로 합치기

colspan="3"
=> 합치는 칸의 수만큼 "값" 으로 입력.
     칸을 합친 후, 나머지 <td>는 삭제해야 함.
----------------------------------------------------------
<input> : 입력양식태그. type 필수속성에 따라 모양이 달라짐.
<input type="text">              : 글자입력
<input type="password">      : 비밀번호 입력
<input type="checkbox">      : 체크박스 (다중선택 가능)
<input rype="radio">            : 라디오버튼 (다중선택 불가)

placeholder 속성 : 기본 텍스트를 제공. (text,password 값에 사용)
ex) placeholder="아이디입력"

name="값" : 체크박스, 라디오버튼 사용시 그룹을 지정주는 역할을함.
=> 값은 영어이름으로 의미전달에 용이한 작명.
-----------------------------------------------------------
*태그에 style을 적용시키는 3가지 방법.
1. 인라인 스타일
: 태그에 직접 style속성을 적용하는 방법.
<태그명 style="스타일속성:값;"></태그명>

2. 내부 스타일
: body에는 id또는 class속성을 사용해 태그에 이름을 짓고,
head사이 <style>태그를 만들어 css속성을 묶어두는 방식.

<body>태그에는~
<태그명 id="값"></태그명>
<태그명 class="값"></태그명>

<style>태그에는~
태그명{스타일속성:값}
#아이디명{스타일속성:값}
.클래스명{스타일속성:값}

단, 아이디명 html문서안에 1번밖에 사용 못함.
클래스명은 html문서안에 여러번 중복사용 가능함.

3. 외부 스타일
: 외부에 스타일시트문서 css를 만들어 연결해서 사용하는 방식.
외부스타일시트문서 => css
* style적용 방식은 2번의 방식과 동일함.
* 반드시 html문서와 연결하여 사용해야 함.
<link href="css경로" rel="stylesheet">
---------------------------------------------------
css selector = 선택자
1. 선택자 : 태그명 / #아이디명 / .클래스명

2. 태그명을 선택자로 사용하면~
: 100개면 100개 모두를 대상으로 스타일이 적용됨.

#아이디명을 선택자로 사용하면~
: 사이트의 큰 영역 구조에만 주로 사용하므로,
사이트내의 1개밖에 없는 영역만 사용할 수 있음.

.클래스명을 선택자로 사용하면~
: 중복으로 사용되는 동일한 디자인의 형식일때
주로 클래스를 중복사용하여 동일하게 지정함.

== 아이디명 & 클래스명 만들때 주의점 ==
1. 반드시 영문으로 시작
2. 띄어쓰기불가
3. 대/소문자는 서로 다른 대상

*영단어_영단어 예) container_cont2_event_ico_gif
*영단어대문자  예) cont2Tit

== 태그의 포함관계에 의해 선택자를 만들기도 함 ==
<div id="box">
    <p>1</p>
    <p>2</p>
    <p>3</p>
</div>

#box p{}  <=아이디 box안의 p태그 3개 모두를 한번에 선택.
==========================================
여백 2가지 (테두리기준으로 적용. 기본 4방으로 들어감.)
1) margin   : 바깥여백
2) padding : 안쪽여백

만약 한방향으로 여백값을 추가한다면~
margin-top
margin-right
margin-bottom
margin-left

padding-top
padding-right
padding-bottom
padding-left

줄여서 쓴다면~
margin:값1;                      (기본값. 사방으로 동일값 적용)
margin:값1 값2;                (위=아래    좌=우)
margin:값1 값2 값3;           (위     좌=우     아래)
margin:값1 값2 값3 값4;      (위 우 아래 좌 =시계방향)
==============================================
* 태그의 배치를 위한 스타일 속성
== 가로배열 ==
1) float속성 / :after 가상선택자
2) flex (반응형웹사이트)
3) display 속성
4) table 속성
5) css 그리드

float 속성 : 블록요소인 태그들을 한줄에 나란히 가로배열 시킬때 사용함.
{float:left}      => 왼쪽->오른쪽방향으로 태그들을 가로배열
{float:right}    =>  오른쪽->왼쪽방향으로 태그들을 가로배열

float적용시 지켜야할 조건.
1) 블록요소 한테 적용. (왜? 인라인요소는 원래 가로배열 하니까)
2) 반드시 형제관계 태그끼리만 float를 적용할 수 있음.
   (부모-자식 / 부모-자손 관계끼리는 float 사용못함.
    => 태그포함관계를 이해하고 있어야함.)
3) 가로배열 되는 형제관계 태그들 모두에게 float속성을 적용시켜야 함.
4) 부모태그영역의 너비값이 1px이라도 모자라면 한줄에 나란히 가로배열 안됨.
(원하는 공간으로 지정해서 여러줄 만들수도 있음. 
공간이 부족하면 줄바꿈되는 특징을 가짐.)

float적용하면 항상 부모태그에게 :after 가상선택자 사용해줘야 함.
- 왜냐면?
float를 적용시킨 태그는 웹브라우저 상에서 "둥둥떠있다" 라고 생각해야 함.
float가 적용된 태그의 "부모태그"에게 본인의 높이값을 전달하지 못함.
=> 부모태그가 자신의 높이값을 인식하지 못함 => 높이가 0 으로 인식.
그래서, 부모태그의 사라진 높이값을 "자동" 으로 잡아주기 위해서
:after 가상선택자를 사용하여 높이값을 인식시킴.
** float를 적용한 부모태그는 항상 :after 적용 해야함!

* 언제 / 누구한테 / 왜 쓰는지를 정확히 이해하고 있어야함.
부모태그:after{content:""; display:block; clear:both;}

== 태그의 포함관계 ==
큰영역의 태그안에 나오는 태그들을 tab키로 들여쓰기하여 작성하는 이유는.
태그의 포함관계를 구분하기 위해서임.

1) 큰영역태그 : 부모태그
2) 그안에 tab키로 한번 들여쓰기하여 작성한 태그 : 자식태그
3) 2)번의 자식태그안에 tab키로 들여쓰기하여 작성한 태그 : 자손태그

예)---------------------------------------
<div id="naver">
  <div class="login">
    <p>아이디</p>
    <p>비밀번호</p>
  </div>
  <div class="btn">
      <a href="경로">로그인</a>
  </div>
</div>

#naver의 자식태그는 ?   .login / .btn
.login의 자식태그는 ?     p태그 2개
.btn의 자식태그는 ?       a태그 1개
=> .login 과 .btn은 형제관계 ( 부모태그가 #naver로 동일하니까 )

#naver의 자손태그는 ? p태그2개 와 a태그 1개 (3개)
==============================================
== box-model 박스 모델 ==
박스모델이란?
- 태그가 차지하는 공간을 계산하는 방법. 
(태그의 기준은 왼쪽상단, 꼭지점 0,0)
- 태그의 가로너비 / 세로높이 / 패딩 / 테두리 / 마진 값으로 이루어짐.

태그가 차지하는 박스모델은?
가로영역 : width + 좌우padding + 좌우border + 좌우margin
세로영역 : height + 상하padding + 상하border + 상하margin

=> 모든태그는 왼쪽상단 꼭지점 기준으로 위->아래로 차곡차곡 쌓여지게됨.
=================================================
* 태그의 배치를 위한 스타일 속성
== 태그를 독립/분리 시켜 자리 마음대로 배치 ==

{position:absolute}
- 태그의 상태를 구조에서 아예 독립시켜 자리 배치함.
(웹사이트 구조에서 아예빠져 버림 = 부모태그 높이 인식못함)
- 방향의 값을 top/bottom(세로)    left/right(가로) 속성을 사용해 위치를 지정해야 함.

부모태그의~
top속성         : 위로 부터 떨어지는 거리값
left속성         : 왼쪽으로 부터 떨어지는 거리값
bottom속성   : 아래로 부터 떨어지는 거리값
right속성       : 오른쪽으로 부터 떨어지는 거리값

{position:absolute}를 쓴다면, 항상 가로/세로 위치 속성에 해당하는 
속성 1개씩을 무조건 함께 써줘야 함.

- 세로 위치 속성 : top / bottom      둘중에 1개
- 가로 위치 속성 : left / right          둘중에 1개
- 단, position속성 없이는 단독으로 사용 할 수 없음.

{position:relative}
- 이때, 위치의 "기준"이 되는 부모태그에게 반드시 적용해야 함.
- 앱솔루트 가진 태그의 부모태그에게 "기준이다" 라는 뜻으로 사용함.
=> 기준만 잡아주기 때문에 방향의 속성값은 사용하지 않아도 됨.

* 만약 {position:relative} 적용하지 않았을때~
부모태그 -> 조부모태그 -> 증부모태그.. 순으로 상위단계의 포지션의
기준을 찾아 그 영역을 기준으로 자리 배치됨.
** 아니면, 항상 "브라우저의 왼쪽상단 기준" 으로 자리배치 됨.


























